# 1.setup go env
# 2.make checkfmt
# 3.make test

name: code-check-test

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
    branches:
      - 'master'

# This ensures that previous jobs for the PR are canceled when the PR is updated.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Code check
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Set up Go 1.18
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Check pr is properly formatted
        run: diff -u <(echo -n) <(gofmt -d ./pkg ./cmd ./tools ./test)

      - name: Checkfmt
        shell: bash
        # maybe timeout, use --timeout optional
        run: make checkfmt

  test:
    name: Go Test
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Set up Go 1.18
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Go test
        shell: bash
        run: |
          mkdir dist
          make coverage-ui
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: coverage.html
          path: dist/coverage.html